{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","visibleGoods1","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","this","booleanReset","className","type","classNames","ALPHABET","onClick","setState","LENGTH","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,4CAME,WAAU,IAAD,OACDC,EApCH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAiBzB,OAfAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQR,GACN,KAAK,EACH,OAAOO,EAAEE,cAAcD,GACzB,KAAK,EACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITR,GACFG,EAAaM,UAGRN,EAeiBO,CAAkBf,EAAiBgB,KAAKd,OAC9D,EAAiCc,KAAKd,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZY,EAAed,IAAaJ,EAASK,MAAQC,EAEnD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYjB,IAAaJ,EAASsB,WAGxCC,QAAS,WACP,EAAKC,SAAS,CAAEpB,SAAUJ,EAASsB,YATvC,iCAeA,wBACEF,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYjB,IAAaJ,EAASyB,SAGxCF,QAAS,WACP,EAAKC,SAAS,CAAEpB,SAAUJ,EAASyB,UATvC,4BAgBA,wBACEL,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,YAA2B,IAAff,IAGlBiB,QAAS,WACP,EAAKC,SAAS,CAAElB,YAAaA,KATjC,qBAeCY,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVI,QAAS,WACP,EAAKC,SAAS,CAAEpB,SAAUJ,EAASK,KAAMC,YAAY,KAJzD,sBAYJ,6BACE,6BACGC,EAAcmB,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAAoBA,kBA5ElC,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5e5df93b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 1:\n        return a.localeCompare(b);\n      case 2:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component <{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const visibleGoods1 = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n    const booleanReset = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': sortType !== SortType.ALPHABET },\n              )\n            }\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': isReversed === false },\n              )\n            }\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n            }}\n          >\n            Reverse\n          </button>\n\n          {booleanReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ sortType: SortType.NONE, isReversed: false });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods1.map(good => (\n              <li data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}